{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakchaudhary/Documents/mern/blog/blog-frontend/src/Pages/Home/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport { Header } from '../../Components/Header';\nimport { Post } from '../../Components/Post/Post';\nimport { UserContextProvider } from '../../Components/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true); // Add a loading state\n\n  useEffect(() => {\n    fetch('http://localhost:9000/post').then(response => {\n      response.json().then(posts => {\n        setPosts(posts);\n        setLoading(false); // Set loading to false when data is fetched\n      });\n    });\n  }, []);\n  if (loading) {\n    // If loading is true, render a loading message\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all\",\n    children: [/*#__PURE__*/_jsxDEV(UserContextProvider, {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        ...post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Header","Post","UserContextProvider","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","loading","setLoading","fetch","then","response","json","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","post","_id","_c","$RefreshReg$"],"sources":["/Users/sarthakchaudhary/Documents/mern/blog/blog-frontend/src/Pages/Home/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './Home.css'\nimport { Header } from '../../Components/Header'\nimport { Post } from '../../Components/Post/Post'\nimport { UserContextProvider } from '../../Components/UserContext'\n\nexport const Home = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true); // Add a loading state\n\n  useEffect(() => {\n    fetch('http://localhost:9000/post').then(response => {\n      response.json().then(posts => {\n        setPosts(posts);\n        setLoading(false); // Set loading to false when data is fetched\n      })\n    })\n  }, []);\n\n  if (loading) { // If loading is true, render a loading message\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"all\">\n      <UserContextProvider>\n      <Header />\n\n    </UserContextProvider>\n      <div className=\"posts\">\n  {posts.length > 0 ? (\n    posts.map(post => <Post key={post._id} {...post} />)\n  ) : (\n    <p>No posts available.</p>\n  )}\n</div>\n\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AACnB,SAASC,MAAM,QAAQ,yBAAyB;AAChD,SAASC,IAAI,QAAQ,4BAA4B;AACjD,SAASC,mBAAmB,QAAQ,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACnDA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACL,KAAK,IAAI;QAC5BC,QAAQ,CAACD,KAAK,CAAC;QACfG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE;IAAE;IACb,oBAAOL,OAAA;MAAAW,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEf,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAL,QAAA,gBAClBX,OAAA,CAACF,mBAAmB;MAAAa,QAAA,eACpBX,OAAA,CAACJ,MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAES,CAAC,eACpBf,OAAA;MAAKgB,SAAS,EAAC,OAAO;MAAAL,QAAA,EACzBR,KAAK,CAACc,MAAM,GAAG,CAAC,GACfd,KAAK,CAACe,GAAG,CAACC,IAAI,iBAAInB,OAAA,CAACH,IAAI;QAAA,GAAoBsB;MAAI,GAAlBA,IAAI,CAACC,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,CAAC,gBAEpDf,OAAA;QAAAW,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC1B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEG,CAAC;AAEV,CAAC;AAAAb,EAAA,CAjCYD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}